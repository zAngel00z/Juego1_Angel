{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport React from 'react';\nimport * as tweens from 'tween-functions';\nfunction degreesToRads(degrees) {\n  return degrees * Math.PI / 180;\n}\nfunction randomRange(min, max) {\n  return min + Math.random() * (max - min);\n}\nfunction randomInt(min, max) {\n  return Math.floor(min + Math.random() * (max - min + 1));\n}\nvar ParticleShape;\n(function (ParticleShape) {\n  ParticleShape[ParticleShape[\"Circle\"] = 0] = \"Circle\";\n  ParticleShape[ParticleShape[\"Square\"] = 1] = \"Square\";\n  ParticleShape[ParticleShape[\"Strip\"] = 2] = \"Strip\";\n})(ParticleShape || (ParticleShape = {}));\nvar RotationDirection;\n(function (RotationDirection) {\n  RotationDirection[RotationDirection[\"Positive\"] = 1] = \"Positive\";\n  RotationDirection[RotationDirection[\"Negative\"] = -1] = \"Negative\";\n})(RotationDirection || (RotationDirection = {}));\nconst DEFAULT_FRAME_TIME = 1000 / 60;\nclass Particle {\n  constructor(context, getOptions, x, y) {\n    this.getOptions = getOptions;\n    const {\n      colors,\n      initialVelocityX,\n      initialVelocityY\n    } = this.getOptions();\n    this.context = context;\n    this.x = x;\n    this.y = y;\n    this.w = randomRange(5, 20);\n    this.h = randomRange(5, 20);\n    this.radius = randomRange(5, 10);\n    this.vx = typeof initialVelocityX === 'number' ? randomRange(-initialVelocityX, initialVelocityX) : randomRange(initialVelocityX.min, initialVelocityX.max);\n    this.vy = typeof initialVelocityY === 'number' ? randomRange(-initialVelocityY, 0) : randomRange(initialVelocityY.min, initialVelocityY.max);\n    this.shape = randomInt(0, 2);\n    this.angle = degreesToRads(randomRange(0, 360));\n    this.angularSpin = randomRange(-0.2, 0.2);\n    this.color = colors[Math.floor(Math.random() * colors.length)];\n    this.rotateY = randomRange(0, 1);\n    this.rotationDirection = randomRange(0, 1) ? RotationDirection.Positive : RotationDirection.Negative;\n  }\n  update(elapsed) {\n    const {\n      gravity,\n      wind,\n      friction,\n      opacity,\n      drawShape\n    } = this.getOptions();\n    const frameTimeMultiplier = elapsed / DEFAULT_FRAME_TIME;\n    this.x += this.vx * frameTimeMultiplier;\n    this.y += this.vy * frameTimeMultiplier;\n    this.vy += gravity * frameTimeMultiplier;\n    this.vx += wind * frameTimeMultiplier;\n    this.vx *= friction ** frameTimeMultiplier;\n    this.vy *= friction ** frameTimeMultiplier;\n    if (this.rotateY >= 1 && this.rotationDirection === RotationDirection.Positive) {\n      this.rotationDirection = RotationDirection.Negative;\n    } else if (this.rotateY <= -1 && this.rotationDirection === RotationDirection.Negative) {\n      this.rotationDirection = RotationDirection.Positive;\n    }\n    const rotateDelta = 0.1 * this.rotationDirection * frameTimeMultiplier;\n    this.rotateY += rotateDelta;\n    this.angle += this.angularSpin;\n    this.context.save();\n    this.context.translate(this.x, this.y);\n    this.context.rotate(this.angle);\n    this.context.scale(1, this.rotateY);\n    this.context.rotate(this.angle);\n    this.context.beginPath();\n    this.context.fillStyle = this.color;\n    this.context.strokeStyle = this.color;\n    this.context.globalAlpha = opacity;\n    this.context.lineCap = 'round';\n    this.context.lineWidth = 2;\n    if (drawShape && typeof drawShape === 'function') {\n      drawShape.call(this, this.context);\n    } else {\n      switch (this.shape) {\n        case ParticleShape.Circle:\n          {\n            this.context.beginPath();\n            this.context.arc(0, 0, this.radius, 0, 2 * Math.PI);\n            this.context.fill();\n            break;\n          }\n        case ParticleShape.Square:\n          {\n            this.context.fillRect(-this.w / 2, -this.h / 2, this.w, this.h);\n            break;\n          }\n        case ParticleShape.Strip:\n          {\n            this.context.fillRect(-this.w / 6, -this.h / 2, this.w / 3, this.h);\n            break;\n          }\n      }\n    }\n    this.context.closePath();\n    this.context.restore();\n  }\n}\nclass ParticleGenerator {\n  constructor(canvas, getOptions) {\n    this.x = 0;\n    this.y = 0;\n    this.w = 0;\n    this.h = 0;\n    this.lastNumberOfPieces = 0;\n    this.tweenProgress = 0;\n    this.tweenFrom = 0;\n    this.particles = [];\n    this.particlesGenerated = 0;\n    this.removeParticleAt = i => {\n      this.particles.splice(i, 1);\n    };\n    this.getParticle = () => {\n      const newParticleX = randomRange(this.x, this.w + this.x);\n      const newParticleY = randomRange(this.y, this.h + this.y);\n      return new Particle(this.context, this.getOptions, newParticleX, newParticleY);\n    };\n    this.animate = elapsed => {\n      const {\n        canvas,\n        context,\n        particlesGenerated,\n        lastNumberOfPieces\n      } = this;\n      const {\n        run,\n        recycle,\n        numberOfPieces,\n        debug,\n        tweenFunction,\n        tweenDuration\n      } = this.getOptions();\n      if (!run) {\n        return false;\n      }\n      const nP = this.particles.length;\n      const activeCount = recycle ? nP : particlesGenerated;\n      // Initial population\n      if (activeCount < numberOfPieces) {\n        // Use the numberOfPieces prop as a key to reset the easing timing\n        if (lastNumberOfPieces !== numberOfPieces) {\n          this.tweenProgress = 0;\n          this.tweenFrom = activeCount;\n          this.lastNumberOfPieces = numberOfPieces;\n        }\n        // Clamp tweenProgress between 0 and tweenDuration\n        this.tweenProgress = Math.min(tweenDuration, Math.max(0, this.tweenProgress + elapsed));\n        const tweenedVal = tweenFunction(this.tweenProgress, this.tweenFrom, numberOfPieces, tweenDuration);\n        const numToAdd = Math.round(tweenedVal - activeCount);\n        for (let i = 0; i < numToAdd; i++) {\n          this.particles.push(this.getParticle());\n        }\n        this.particlesGenerated += numToAdd;\n      }\n      if (debug) {\n        // Draw debug text\n        context.font = '12px sans-serif';\n        context.fillStyle = '#333';\n        context.textAlign = 'right';\n        context.fillText(`Particles: ${nP}`, canvas.width - 10, canvas.height - 20);\n      }\n      // Maintain the population, iterating backwards to prevent issues when removing particles\n      for (let i = this.particles.length - 1; i >= 0; i--) {\n        const p = this.particles[i];\n        // Update each particle's position\n        p.update(elapsed);\n        // Prune the off-canvas particles\n        if (p.y > canvas.height || p.y < -100 || p.x > canvas.width + 100 || p.x < -100) {\n          if (recycle && activeCount <= numberOfPieces) {\n            // Replace the particle with a brand new one\n            this.particles[i] = this.getParticle();\n          } else {\n            this.removeParticleAt(i);\n          }\n        }\n      }\n      return nP > 0 || activeCount < numberOfPieces;\n    };\n    this.canvas = canvas;\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get canvas context');\n    }\n    this.context = ctx;\n    this.getOptions = getOptions;\n  }\n}\nconst confettiDefaults = {\n  width: typeof window !== 'undefined' ? window.innerWidth : 300,\n  height: typeof window !== 'undefined' ? window.innerHeight : 200,\n  numberOfPieces: 200,\n  friction: 0.99,\n  wind: 0,\n  gravity: 0.1,\n  initialVelocityX: 4,\n  initialVelocityY: 10,\n  colors: ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800', '#FF5722', '#795548'],\n  opacity: 1.0,\n  debug: false,\n  tweenFunction: tweens.easeInOutQuad,\n  tweenDuration: 5000,\n  recycle: true,\n  run: true\n};\nclass Confetti {\n  constructor(canvas, opts) {\n    this.lastFrameTime = 0;\n    this.setOptionsWithDefaults = opts => {\n      const computedConfettiDefaults = {\n        confettiSource: {\n          x: 0,\n          y: 0,\n          w: this.canvas.width,\n          h: 0\n        }\n      };\n      this._options = {\n        ...computedConfettiDefaults,\n        ...confettiDefaults,\n        ...opts\n      };\n      Object.assign(this, opts.confettiSource);\n    };\n    this.update = (timestamp = 0) => {\n      const {\n        options: {\n          run,\n          onConfettiComplete,\n          frameRate\n        },\n        canvas,\n        context\n      } = this;\n      // Cap elapsed time to 50ms to prevent large time steps\n      const elapsed = Math.min(timestamp - this.lastFrameTime, 50);\n      // Throttle the frame rate if set\n      if (frameRate && elapsed < 1000 / frameRate) {\n        this.rafId = requestAnimationFrame(this.update);\n        return;\n      }\n      this.lastFrameTime = timestamp - (frameRate ? elapsed % frameRate : 0);\n      if (run) {\n        context.fillStyle = 'white';\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      if (this.generator.animate(elapsed)) {\n        this.rafId = requestAnimationFrame(this.update);\n      } else {\n        if (onConfettiComplete && typeof onConfettiComplete === 'function' && this.generator.particlesGenerated > 0) {\n          onConfettiComplete.call(this, this);\n        }\n        this._options.run = false;\n      }\n    };\n    this.reset = () => {\n      if (this.generator && this.generator.particlesGenerated > 0) {\n        this.generator.particlesGenerated = 0;\n        this.generator.particles = [];\n        this.generator.lastNumberOfPieces = 0;\n      }\n    };\n    this.stop = () => {\n      this.options = {\n        run: false\n      };\n      if (this.rafId) {\n        cancelAnimationFrame(this.rafId);\n        this.rafId = undefined;\n      }\n    };\n    this.canvas = canvas;\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get canvas context');\n    }\n    this.context = ctx;\n    this.generator = new ParticleGenerator(this.canvas, () => this.options);\n    this.options = opts;\n    this.update();\n  }\n  get options() {\n    return this._options;\n  }\n  set options(opts) {\n    const lastRunState = this._options?.run;\n    const lastRecycleState = this._options?.recycle;\n    this.setOptionsWithDefaults(opts);\n    if (this.generator) {\n      Object.assign(this.generator, this.options.confettiSource);\n      if (typeof opts.recycle === 'boolean' && opts.recycle && lastRecycleState === false) {\n        this.generator.lastNumberOfPieces = this.generator.particles.length;\n      }\n    }\n    if (typeof opts.run === 'boolean' && opts.run && lastRunState === false) {\n      this.update();\n    }\n  }\n}\nconst ref = React.createRef();\nclass ReactConfettiInternal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.canvas = props.canvasRef || ref;\n  }\n  componentDidMount() {\n    if (this.canvas.current) {\n      const opts = extractCanvasProps(this.props)[0];\n      this.confetti = new Confetti(this.canvas.current, opts);\n    }\n  }\n  componentDidUpdate() {\n    const confettiOptions = extractCanvasProps(this.props)[0];\n    if (this.confetti) {\n      this.confetti.options = confettiOptions;\n    }\n  }\n  componentWillUnmount() {\n    if (this.confetti) {\n      this.confetti.stop();\n    }\n    this.confetti = undefined;\n  }\n  render() {\n    const [confettiOptions, passedProps] = extractCanvasProps(this.props);\n    const canvasStyles = {\n      zIndex: 2,\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      ...passedProps.style\n    };\n    return jsx(\"canvas\", {\n      width: confettiOptions.width,\n      height: confettiOptions.height,\n      ref: this.canvas,\n      ...passedProps,\n      style: canvasStyles\n    });\n  }\n}\nReactConfettiInternal.defaultProps = {\n  ...confettiDefaults\n};\nReactConfettiInternal.displayName = 'ReactConfetti';\nfunction extractCanvasProps(props) {\n  const confettiOptions = {};\n  const refs = {};\n  const rest = {};\n  const confettiOptionKeys = [...Object.keys(confettiDefaults), 'confettiSource', 'drawShape', 'onConfettiComplete', 'frameRate'];\n  const refProps = ['canvasRef'];\n  for (const prop in props) {\n    const val = props[prop];\n    if (confettiOptionKeys.includes(prop)) {\n      confettiOptions[prop] = val;\n    } else if (refProps.includes(prop)) {\n      refProps[prop] = val;\n    } else {\n      rest[prop] = val;\n    }\n  }\n  return [confettiOptions, rest, refs];\n}\nconst ReactConfetti = React.forwardRef((props, ref) => jsx(ReactConfettiInternal, {\n  canvasRef: ref,\n  ...props\n}));\nexport { ReactConfetti as default };","map":{"version":3,"names":["degreesToRads","degrees","Math","PI","randomRange","min","max","random","randomInt","floor","ParticleShape","RotationDirection","DEFAULT_FRAME_TIME","Particle","constructor","context","getOptions","x","y","colors","initialVelocityX","initialVelocityY","w","h","radius","vx","vy","shape","angle","angularSpin","color","length","rotateY","rotationDirection","Positive","Negative","update","elapsed","gravity","wind","friction","opacity","drawShape","frameTimeMultiplier","rotateDelta","save","translate","rotate","scale","beginPath","fillStyle","strokeStyle","globalAlpha","lineCap","lineWidth","call","Circle","arc","fill","Square","fillRect","Strip","closePath","restore","ParticleGenerator","canvas","lastNumberOfPieces","tweenProgress","tweenFrom","particles","particlesGenerated","removeParticleAt","i","splice","getParticle","newParticleX","newParticleY","animate","run","recycle","numberOfPieces","debug","tweenFunction","tweenDuration","nP","activeCount","tweenedVal","numToAdd","round","push","font","textAlign","fillText","width","height","p","ctx","getContext","Error","confettiDefaults","window","innerWidth","innerHeight","tweens","easeInOutQuad","Confetti","opts","lastFrameTime","setOptionsWithDefaults","computedConfettiDefaults","confettiSource","_options","Object","assign","timestamp","options","onConfettiComplete","frameRate","rafId","requestAnimationFrame","clearRect","generator","reset","stop","cancelAnimationFrame","undefined","lastRunState","lastRecycleState","ref","React","createRef","ReactConfettiInternal","Component","props","canvasRef","componentDidMount","current","extractCanvasProps","confetti","componentDidUpdate","confettiOptions","componentWillUnmount","render","passedProps","canvasStyles","zIndex","position","pointerEvents","top","left","bottom","right","style","jsx","defaultProps","displayName","refs","rest","confettiOptionKeys","keys","refProps","prop","val","includes","ReactConfetti","forwardRef"],"sources":["C:\\Users\\Usuario\\Desktop\\Juego1_Angel\\frontend\\node_modules\\react-confetti\\src\\utils.ts","C:\\Users\\Usuario\\Desktop\\Juego1_Angel\\frontend\\node_modules\\react-confetti\\src\\Particle.ts","C:\\Users\\Usuario\\Desktop\\Juego1_Angel\\frontend\\node_modules\\react-confetti\\src\\ParticleGenerator.ts","C:\\Users\\Usuario\\Desktop\\Juego1_Angel\\frontend\\node_modules\\react-confetti\\src\\Confetti.ts","C:\\Users\\Usuario\\Desktop\\Juego1_Angel\\frontend\\node_modules\\react-confetti\\src\\ReactConfetti.tsx"],"sourcesContent":["import { ICircle } from './Circle'\nimport { IPoint } from './Point'\nimport { IRect } from './Rect'\n\nexport function norm(value: number, min: number, max: number) {\n  return (value - min) / (max - min)\n}\n\nexport function lerp(lnorm: number, min: number, max: number) {\n  return (max - min) * lnorm + min\n}\n\nexport function map(\n  value: number,\n  sourceMin: number,\n  sourceMax: number,\n  destMin: number,\n  destMax: number,\n) {\n  return lerp(norm(value, sourceMin, sourceMax), destMin, destMax)\n}\n\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max))\n}\n\nexport function distance(p0: IPoint, p1: IPoint) {\n  const dx = p1.x - p0.x\n  const dy = p1.y - p0.y\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nexport function distanceXY(x0: number, y0: number, x1: number, y1: number) {\n  const dx = x1 - x0\n  const dy = y1 - y0\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nexport function circleCollision(c0: ICircle, c1: ICircle) {\n  return distance(c0, c1) <= c0.radius + c1.radius\n}\n\nexport function circlePointCollision(x: number, y: number, circle: ICircle) {\n  return distanceXY(x, y, circle.x, circle.y) < circle.radius\n}\n\nexport function inRange(value: number, min: number, max: number) {\n  return value >= Math.min(min, max) && value <= Math.max(min, max)\n}\n\nexport function pointInRect(p: IPoint, rect: IRect) {\n  return (\n    inRange(p.x, rect.x, rect.x + rect.w) &&\n    inRange(p.y, rect.y, rect.y + rect.h)\n  )\n}\n\nexport function rangeIntersect(\n  min0: number,\n  max0: number,\n  min1: number,\n  max1: number,\n) {\n  return (\n    Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1)\n  )\n}\n\nexport function rectIntersect(r0: IRect, r1: IRect) {\n  return (\n    rangeIntersect(r0.x, r0.x + r0.w, r1.x, r1.x + r1.w) &&\n    rangeIntersect(r0.y, r0.y + r0.h, r1.y, r1.y + r1.h)\n  )\n}\n\nexport function degreesToRads(degrees: number) {\n  return (degrees * Math.PI) / 180\n}\n\nexport function radsToDegrees(radians: number) {\n  return (radians * 180) / Math.PI\n}\n\nexport function randomRange(min: number, max: number) {\n  return min + Math.random() * (max - min)\n}\n\nexport function randomInt(min: number, max: number) {\n  return Math.floor(min + Math.random() * (max - min + 1))\n}\n","import { IConfettiOptions } from './Confetti'\nimport { degreesToRads, randomInt, randomRange } from './utils'\n\nexport enum ParticleShape {\n  Circle = 0,\n  Square = 1,\n  Strip = 2,\n}\n\nenum RotationDirection {\n  Positive = 1,\n  Negative = -1,\n}\n\nconst DEFAULT_FRAME_TIME = 1000 / 60\n\nexport default class Particle {\n  constructor(\n    context: CanvasRenderingContext2D,\n    getOptions: () => IConfettiOptions,\n    x: number,\n    y: number,\n  ) {\n    this.getOptions = getOptions\n    const { colors, initialVelocityX, initialVelocityY } = this.getOptions()\n    this.context = context\n    this.x = x\n    this.y = y\n    this.w = randomRange(5, 20)\n    this.h = randomRange(5, 20)\n    this.radius = randomRange(5, 10)\n    this.vx =\n      typeof initialVelocityX === 'number'\n        ? randomRange(-initialVelocityX, initialVelocityX)\n        : randomRange(initialVelocityX.min, initialVelocityX.max)\n    this.vy =\n      typeof initialVelocityY === 'number'\n        ? randomRange(-initialVelocityY, 0)\n        : randomRange(initialVelocityY.min, initialVelocityY.max)\n    this.shape = randomInt(0, 2)\n    this.angle = degreesToRads(randomRange(0, 360))\n    this.angularSpin = randomRange(-0.2, 0.2)\n    this.color = colors[Math.floor(Math.random() * colors.length)]\n    this.rotateY = randomRange(0, 1)\n    this.rotationDirection = randomRange(0, 1)\n      ? RotationDirection.Positive\n      : RotationDirection.Negative\n  }\n\n  context: CanvasRenderingContext2D\n\n  radius: number\n\n  x: number\n\n  y: number\n\n  w: number\n\n  h: number\n\n  vx: number\n\n  vy: number\n\n  shape: ParticleShape\n\n  angle: number\n\n  angularSpin: number\n\n  color: string\n\n  // Actually used as scaleY to simulate rotation cheaply\n  rotateY: number\n\n  rotationDirection: RotationDirection\n\n  getOptions: () => IConfettiOptions\n\n  update(elapsed: number) {\n    const { gravity, wind, friction, opacity, drawShape } = this.getOptions()\n    const frameTimeMultiplier = elapsed / DEFAULT_FRAME_TIME\n    this.x += this.vx * frameTimeMultiplier\n    this.y += this.vy * frameTimeMultiplier\n    this.vy += gravity * frameTimeMultiplier\n    this.vx += wind * frameTimeMultiplier\n    this.vx *= friction ** frameTimeMultiplier\n    this.vy *= friction ** frameTimeMultiplier\n    if (\n      this.rotateY >= 1 &&\n      this.rotationDirection === RotationDirection.Positive\n    ) {\n      this.rotationDirection = RotationDirection.Negative\n    } else if (\n      this.rotateY <= -1 &&\n      this.rotationDirection === RotationDirection.Negative\n    ) {\n      this.rotationDirection = RotationDirection.Positive\n    }\n\n    const rotateDelta = 0.1 * this.rotationDirection * frameTimeMultiplier\n\n    this.rotateY += rotateDelta\n    this.angle += this.angularSpin\n    this.context.save()\n    this.context.translate(this.x, this.y)\n    this.context.rotate(this.angle)\n    this.context.scale(1, this.rotateY)\n    this.context.rotate(this.angle)\n    this.context.beginPath()\n    this.context.fillStyle = this.color\n    this.context.strokeStyle = this.color\n    this.context.globalAlpha = opacity\n    this.context.lineCap = 'round'\n    this.context.lineWidth = 2\n    if (drawShape && typeof drawShape === 'function') {\n      drawShape.call(this, this.context)\n    } else {\n      switch (this.shape) {\n        case ParticleShape.Circle: {\n          this.context.beginPath()\n          this.context.arc(0, 0, this.radius, 0, 2 * Math.PI)\n          this.context.fill()\n          break\n        }\n        case ParticleShape.Square: {\n          this.context.fillRect(-this.w / 2, -this.h / 2, this.w, this.h)\n          break\n        }\n        case ParticleShape.Strip: {\n          this.context.fillRect(-this.w / 6, -this.h / 2, this.w / 3, this.h)\n          break\n        }\n      }\n    }\n    this.context.closePath()\n    this.context.restore()\n  }\n}\n","import { IConfettiOptions } from './Confetti'\nimport Particle from './Particle'\nimport { IRect } from './Rect'\nimport { randomRange } from './utils'\n\nexport interface IParticleGenerator extends IRect {\n  removeParticleAt: (index: number) => void\n  getParticle: () => void\n  animate: (elapsed: number) => boolean\n  particles: Particle[]\n  particlesGenerated: number\n}\n\nexport default class ParticleGenerator implements IParticleGenerator {\n  constructor(canvas: HTMLCanvasElement, getOptions: () => IConfettiOptions) {\n    this.canvas = canvas\n    const ctx = this.canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('Could not get canvas context')\n    }\n    this.context = ctx\n    this.getOptions = getOptions\n  }\n\n  canvas: HTMLCanvasElement\n\n  context: CanvasRenderingContext2D\n\n  getOptions: () => IConfettiOptions\n\n  x = 0\n\n  y = 0\n\n  w = 0\n\n  h = 0\n\n  lastNumberOfPieces = 0\n\n  tweenProgress = 0\n\n  tweenFrom = 0\n\n  particles: Particle[] = []\n\n  particlesGenerated = 0\n\n  removeParticleAt = (i: number) => {\n    this.particles.splice(i, 1)\n  }\n\n  getParticle = () => {\n    const newParticleX = randomRange(this.x, this.w + this.x)\n    const newParticleY = randomRange(this.y, this.h + this.y)\n    return new Particle(\n      this.context,\n      this.getOptions,\n      newParticleX,\n      newParticleY,\n    )\n  }\n\n  animate = (elapsed: number): boolean => {\n    const { canvas, context, particlesGenerated, lastNumberOfPieces } = this\n    const {\n      run,\n      recycle,\n      numberOfPieces,\n      debug,\n      tweenFunction,\n      tweenDuration,\n    } = this.getOptions()\n    if (!run) {\n      return false\n    }\n\n    const nP = this.particles.length\n    const activeCount = recycle ? nP : particlesGenerated\n\n    // Initial population\n    if (activeCount < numberOfPieces) {\n      // Use the numberOfPieces prop as a key to reset the easing timing\n      if (lastNumberOfPieces !== numberOfPieces) {\n        this.tweenProgress = 0\n        this.tweenFrom = activeCount\n        this.lastNumberOfPieces = numberOfPieces\n      }\n\n      // Clamp tweenProgress between 0 and tweenDuration\n      this.tweenProgress = Math.min(\n        tweenDuration,\n        Math.max(0, this.tweenProgress + elapsed),\n      )\n      const tweenedVal = tweenFunction(\n        this.tweenProgress,\n        this.tweenFrom,\n        numberOfPieces,\n        tweenDuration,\n      )\n      const numToAdd = Math.round(tweenedVal - activeCount)\n      for (let i = 0; i < numToAdd; i++) {\n        this.particles.push(this.getParticle())\n      }\n      this.particlesGenerated += numToAdd\n    }\n    if (debug) {\n      // Draw debug text\n      context.font = '12px sans-serif'\n      context.fillStyle = '#333'\n      context.textAlign = 'right'\n      context.fillText(\n        `Particles: ${nP}`,\n        canvas.width - 10,\n        canvas.height - 20,\n      )\n    }\n\n    // Maintain the population, iterating backwards to prevent issues when removing particles\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      const p = this.particles[i]\n      // Update each particle's position\n      p.update(elapsed)\n      // Prune the off-canvas particles\n      if (\n        p.y > canvas.height ||\n        p.y < -100 ||\n        p.x > canvas.width + 100 ||\n        p.x < -100\n      ) {\n        if (recycle && activeCount <= numberOfPieces) {\n          // Replace the particle with a brand new one\n          this.particles[i] = this.getParticle()\n        } else {\n          this.removeParticleAt(i)\n        }\n      }\n    }\n    return nP > 0 || activeCount < numberOfPieces\n  }\n}\n","import * as tweens from 'tween-functions'\nimport ParticleGenerator from './ParticleGenerator'\nimport { IRect } from './Rect'\n\nexport interface IConfettiOptions {\n  /**\n   * Width of the component\n   * @default window.width\n   */\n  width: number\n  /**\n   * Height of the component\n   * @default window.height\n   */\n  height: number\n  /**\n   * Max number of confetti pieces to render.\n   * @default 200\n   */\n  numberOfPieces: number\n  /**\n   * Slows movement of pieces. (lower number = slower confetti)\n   * @default 0.99\n   */\n  friction: number\n  /**\n   * Blows confetti along the X axis.\n   * @default 0\n   */\n  wind: number\n  /**\n   * How fast it falls (pixels per frame)\n   * @default 0.1\n   */\n  gravity: number\n  /**\n   * How fast the confetti is emitted horizontally\n   * @default 4\n   */\n  initialVelocityX: { min: number; max: number } | number\n  /**\n   * How fast the confetti is emitted vertically\n   * @default 10\n   */\n  initialVelocityY: { min: number; max: number } | number\n  /**\n   * Array of colors to choose from.\n   */\n  colors: string[]\n  /**\n   * Opacity of the confetti.\n   * @default 1\n   */\n  opacity: number\n  /**\n   * If false, only numberOfPieces will be emitted and then stops. If true, when a confetto goes offscreen, a new one will be emitted.\n   * @default true\n   */\n  recycle: boolean\n  /**\n   * If false, stops the requestAnimationFrame loop.\n   * @default true\n   */\n  run: boolean\n  /**\n   * The frame rate of the animation. If set, the animation will be throttled to that frame rate.\n   * @default undefined\n   */\n  frameRate?: number\n  /**\n   * Renders some debug text on the canvas.\n   * @default false\n   */\n  debug: boolean\n  /**\n   * A Rect defining the area where the confetti will spawn.\n   * @default {\n   *   x: 0,\n   *   y: 0,\n   *   w: canvas.width,\n   *   h: 0\n   * }\n   */\n  confettiSource: IRect\n  /**\n   * Controls the rate at which confetti is spawned.\n   * @default easeInOutQuad\n   */\n  tweenFunction: (\n    currentTime: number,\n    currentValue: number,\n    targetValue: number,\n    duration: number,\n    s?: number,\n  ) => number\n  /**\n   * Number of milliseconds it should take to spawn numberOfPieces.\n   * @default 5000\n   */\n  tweenDuration: number\n  /**\n   * Function to draw your own confetti shapes.\n   */\n  drawShape?: (context: CanvasRenderingContext2D) => void\n  /**\n   * Function called when all confetti has fallen off-canvas.\n   */\n  onConfettiComplete?: (confettiInstance?: Confetti) => void\n}\n\nexport const confettiDefaults: Pick<\n  IConfettiOptions,\n  Exclude<keyof IConfettiOptions, 'confettiSource'>\n> = {\n  width: typeof window !== 'undefined' ? window.innerWidth : 300,\n  height: typeof window !== 'undefined' ? window.innerHeight : 200,\n  numberOfPieces: 200,\n  friction: 0.99,\n  wind: 0,\n  gravity: 0.1,\n  initialVelocityX: 4,\n  initialVelocityY: 10,\n  colors: [\n    '#f44336',\n    '#e91e63',\n    '#9c27b0',\n    '#673ab7',\n    '#3f51b5',\n    '#2196f3',\n    '#03a9f4',\n    '#00bcd4',\n    '#009688',\n    '#4CAF50',\n    '#8BC34A',\n    '#CDDC39',\n    '#FFEB3B',\n    '#FFC107',\n    '#FF9800',\n    '#FF5722',\n    '#795548',\n  ],\n  opacity: 1.0,\n  debug: false,\n  tweenFunction: tweens.easeInOutQuad,\n  tweenDuration: 5000,\n  recycle: true,\n  run: true,\n}\n\nexport class Confetti {\n  constructor(canvas: HTMLCanvasElement, opts: Partial<IConfettiOptions>) {\n    this.canvas = canvas\n    const ctx = this.canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('Could not get canvas context')\n    }\n    this.context = ctx\n\n    this.generator = new ParticleGenerator(\n      this.canvas,\n      () => this.options as IConfettiOptions,\n    )\n    this.options = opts\n    this.update()\n  }\n\n  canvas: HTMLCanvasElement\n\n  context: CanvasRenderingContext2D\n\n  _options!: IConfettiOptions\n\n  generator: ParticleGenerator\n\n  rafId?: number\n\n  lastFrameTime = 0\n\n  get options(): Partial<IConfettiOptions> {\n    return this._options\n  }\n\n  set options(opts: Partial<IConfettiOptions>) {\n    const lastRunState = this._options?.run\n    const lastRecycleState = this._options?.recycle\n    this.setOptionsWithDefaults(opts)\n    if (this.generator) {\n      Object.assign(this.generator, this.options.confettiSource)\n      if (\n        typeof opts.recycle === 'boolean' &&\n        opts.recycle &&\n        lastRecycleState === false\n      ) {\n        this.generator.lastNumberOfPieces = this.generator.particles.length\n      }\n    }\n    if (typeof opts.run === 'boolean' && opts.run && lastRunState === false) {\n      this.update()\n    }\n  }\n\n  setOptionsWithDefaults = (opts: Partial<IConfettiOptions>) => {\n    const computedConfettiDefaults = {\n      confettiSource: {\n        x: 0,\n        y: 0,\n        w: this.canvas.width,\n        h: 0,\n      },\n    }\n    this._options = {\n      ...computedConfettiDefaults,\n      ...confettiDefaults,\n      ...opts,\n    }\n    Object.assign(this, opts.confettiSource)\n  }\n\n  update = (timestamp = 0) => {\n    const {\n      options: { run, onConfettiComplete, frameRate },\n      canvas,\n      context,\n    } = this\n    // Cap elapsed time to 50ms to prevent large time steps\n    const elapsed = Math.min(timestamp - this.lastFrameTime, 50)\n    // Throttle the frame rate if set\n    if (frameRate && elapsed < 1000 / frameRate) {\n      this.rafId = requestAnimationFrame(this.update)\n      return\n    }\n\n    this.lastFrameTime = timestamp - (frameRate ? elapsed % frameRate : 0)\n\n    if (run) {\n      context.fillStyle = 'white'\n      context.clearRect(0, 0, canvas.width, canvas.height)\n    }\n    if (this.generator.animate(elapsed)) {\n      this.rafId = requestAnimationFrame(this.update)\n    } else {\n      if (\n        onConfettiComplete &&\n        typeof onConfettiComplete === 'function' &&\n        this.generator.particlesGenerated > 0\n      ) {\n        onConfettiComplete.call(this, this)\n      }\n      this._options.run = false\n    }\n  }\n\n  reset = () => {\n    if (this.generator && this.generator.particlesGenerated > 0) {\n      this.generator.particlesGenerated = 0\n      this.generator.particles = []\n      this.generator.lastNumberOfPieces = 0\n    }\n  }\n\n  stop = () => {\n    this.options = { run: false }\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = undefined\n    }\n  }\n}\n\nexport default Confetti\n","import React from 'react'\nimport Confetti, { IConfettiOptions, confettiDefaults } from './Confetti'\n\nexport type { IConfettiOptions } from './Confetti'\n\nconst ref = React.createRef<HTMLCanvasElement>()\n\nexport type Props = Partial<IConfettiOptions> &\n  React.CanvasHTMLAttributes<HTMLCanvasElement> & {\n    canvasRef?: React.Ref<HTMLCanvasElement>\n  }\n\nclass ReactConfettiInternal extends React.Component<Props> {\n  static readonly defaultProps = {\n    ...confettiDefaults,\n  }\n\n  static readonly displayName = 'ReactConfetti'\n\n  constructor(props: Props) {\n    super(props)\n    this.canvas = (props.canvasRef as React.RefObject<HTMLCanvasElement>) || ref\n  }\n\n  canvas: React.RefObject<HTMLCanvasElement | null> = React.createRef()\n\n  confetti?: Confetti\n\n  componentDidMount() {\n    if (this.canvas.current) {\n      const opts = extractCanvasProps(this.props)[0]\n      this.confetti = new Confetti(this.canvas.current, opts)\n    }\n  }\n\n  componentDidUpdate() {\n    const confettiOptions = extractCanvasProps(this.props)[0]\n    if (this.confetti) {\n      this.confetti.options = confettiOptions as IConfettiOptions\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.confetti) {\n      this.confetti.stop()\n    }\n    this.confetti = undefined\n  }\n\n  render() {\n    const [confettiOptions, passedProps] = extractCanvasProps(this.props)\n    const canvasStyles = {\n      zIndex: 2,\n      position: 'absolute' as const,\n      pointerEvents: 'none' as const,\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      ...passedProps.style,\n    }\n    return (\n      <canvas\n        width={confettiOptions.width}\n        height={confettiOptions.height}\n        ref={this.canvas}\n        {...passedProps}\n        style={canvasStyles}\n      />\n    )\n  }\n}\n\ninterface Refs {\n  [key: string]: React.Ref<HTMLElement>\n}\nfunction extractCanvasProps(\n  props: Partial<IConfettiOptions> | any,\n): [\n  Partial<IConfettiOptions>,\n  Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>>,\n  Refs,\n] {\n  const confettiOptions: Partial<IConfettiOptions> = {}\n  const refs: Refs = {}\n  const rest: any = {}\n  const confettiOptionKeys = [\n    ...Object.keys(confettiDefaults),\n    'confettiSource',\n    'drawShape',\n    'onConfettiComplete',\n    'frameRate',\n  ]\n  const refProps = ['canvasRef']\n  for (const prop in props) {\n    const val = props[prop as string]\n    if (confettiOptionKeys.includes(prop)) {\n      confettiOptions[prop as keyof IConfettiOptions] = val\n    } else if (refProps.includes(prop)) {\n      refProps[prop as any] = val\n    } else {\n      rest[prop] = val\n    }\n  }\n  return [confettiOptions, rest, refs]\n}\n\nexport const ReactConfetti = React.forwardRef<HTMLCanvasElement, Props>(\n  (props, ref) => <ReactConfettiInternal canvasRef={ref} {...props} />,\n)\n\nexport default ReactConfetti\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}